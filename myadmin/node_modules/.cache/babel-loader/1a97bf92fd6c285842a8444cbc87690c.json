{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userRedux\"; // Keep the user logged in after refresh...\n\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nvar persitConfig = {\n  key: \"root\",\n  version: 1,\n  storage: storage\n}; // const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n\nvar persistedReducer = persistReducer(persitConfig, userReducer);\nexport var store = configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    });\n  }\n});\nexport var persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persitConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","persistor"],"sources":["/home/kim/Documents/react/avimar/admin/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userRedux\";\n\n// Keep the user logged in after refresh...\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persitConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\n// const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n\nconst persistedReducer = persistReducer(persitConfig, userReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CAEA;;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,IAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE,MADc;EAEnBC,OAAO,EAAE,CAFU;EAGnBH,OAAO,EAAPA;AAHmB,CAArB,C,CAMA;;AAEA,IAAMI,gBAAgB,GAAGX,cAAc,CAACQ,YAAD,EAAeV,WAAf,CAAvC;AAEA,OAAO,IAAMc,KAAK,GAAGhB,cAAc,CAAC;EAClCiB,OAAO,EAAEF,gBADyB;EAElCG,UAAU,EAAE,oBAACC,oBAAD;IAAA,OACVA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;QACjBC,aAAa,EAAE,CAAChB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;MADE;IADA,CAAD,CADV;EAAA;AAFsB,CAAD,CAA5B;AAUP,OAAO,IAAIY,SAAS,GAAGnB,YAAY,CAACa,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}